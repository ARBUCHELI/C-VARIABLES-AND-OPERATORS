# VARIABLES: LESSON
-------------------

* What is a Variable in C?
--------------------------
In this lesson you will learn about:

	1. The rules for naming variables in C.

	2. The main data types in C: int, float, double, and char.

	3. Declaring and initializing data types in C, as well as changing their value.

	4. Casting from one data type to another, and some potential limitations in C.

Let’s start with what a variable is. It is a reference used to store information for future use. For instance, int score can be called later in your code to assign, change, compare, etc. 
In this example, you can see the basic structure of variable creation (known as declaration) is type variable_name. Have no fear, we will go over each part of this and more in this 
lesson. Specifically, we will cover how to create, name, assign, modify, and convert them to different types.

As a bonus tip right from the start, you can create more than one variable of the same type at a time by listing them with commas between their names, like type variable1, variable_2, 
variable_3, variable4.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Naming Standards
------------------
We are going to start with the second part of our variable declaration, type variable_name, the variable_name. C does not allow you to throw anything down and call it a variable name, 
there are some restrictions.

	. Names can be composed of upper and lower case letters, numbers, and underscores.

	. The first character must be a letter (upper or lower case).

	. No keywords are allowed as the full name (int is not allowed but int_count would work).

That’s it, nothing too crazy, just keep those rules in mind when you are creating your names for your variables.

* Instructions
--------------
Checkpoint 1 Passed
1.
The code on the right has errors in each of the variable declarations. Look at the rules for variable names above and fix each of them so that there is one variable declaration per line 
and the code compiles.

When complete you will see "Hello World" in the output window.

Program.c
---------
#include<stdio.h>

int main() {
  
  int number;
  int test_value;
  int example;
  float int1;
  printf("Hello World!\n");

}

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Data Types
------------
What about that first part of our template type (from type variable_name)? We saw some examples in the previous exercise when you corrected the bad variable names, but let’s talk about 
what they are.

The type of a variable denotes what kind of information can be stored in it. C has a good number of types you can use, but in this lesson, we will go over some of the most common ones: 
int, float, double, and char.

In C, you must specify the type of the variable when you declare it. Once it is set, that type of information is the only type that can go into that variable. So if you create a variable 
of type int, which can only store whole numbers, you will not be able to store "a" nor 1.2 in it. The table below details these types we are going over and what information can go into 
each.

	Type			Description					Values
	----			-----------					------
	int			a whole number					-2,147,483,648 to 2,147,483,647
	float			a number with possible decimals			6 decimal places
	double			a number with possible decimals			15 decimal places
	char			stores one character (letter or number)		a single character

There are a few questions you might be asking yourself looking at these descriptions. What’s the difference between a float and a double? We are going to look at this in the next 
exercise. char holds a single letter or number, but what if you want to store something like a person’s name, that is more than one character (in most cases)? That gets a bit more 
technical and you will learn about how that works in the lesson on strings later in the course!

* Instructions
--------------
Checkpoint 1 Passed
1.
The code in the editor is ready to display basic information about an imaginary student. The problem is the programmer forgot to declare the data types for each variable at the top of the 
program, so it will fail with errors.

Go in and add appropriate data types to each variable so when you run the application the program completes and student information is displayed.


Hint
For the fees, a double or a float would allow the application to compile, but as a rule of thumb double should be used when money is involved to ensure better accuracy.

Program.c
---------
#include <stdio.h>

int main() {
  
  // Fix the missing data types
  int studentRank;
  float studentFeeTotal;
  char studentGradeLetter;
  
  // No need to make any changes below here, use these as a hint to how each variable above should be declared
 studentRank = 1;
 studentFeeTotal = 100.56;
 studentGradeLetter = 'A';

 printf("Student's Rank in class: %dst\n", studentRank);
 printf("Student's Total Fees: $%3.2f\n", studentFeeTotal);
 printf("Student's Grade: %c\n", studentGradeLetter);
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------






















































